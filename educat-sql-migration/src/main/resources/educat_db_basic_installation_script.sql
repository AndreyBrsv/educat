-- Основной скрипт развертывания базы


-- *** ОБЩИЕ НАСТРОЙКИ БАЗЫ ***




-- *** СХЕМА ***





-- *** ТАБЛИЦЫ ***
-- *ПОЛЬЗОВАТЕЛИ*
-- Пользователи
CREATE TABLE EC_USERS (
    USER_ID SERIAL PRIMARY KEY,
    USER_ROLE_ID NUMERIC NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    EMAIL_CONFIRMED BOOLEAN NOT NULL DEFAULT FALSE,
    PASSWORD VARCHAR(50) NOT NULL,
    FIRST_NAME VARCHAR(50) NOT NULL,
    SECOND_NAME VARCHAR(50) NOT NULL,
    MIDDLE_NAME VARCHAR(50),
    STATUS VARCHAR(50)
);
CREATE UNIQUE INDEX UI_EC_USERS_EMAIL ON EC_USERS (EMAIL);
COMMENT ON TABLE EC_USERS IS 'Пользователи';
COMMENT ON COLUMN EC_USERS.USER_ID IS 'Уникальный идентификатор пользователя';
COMMENT ON COLUMN EC_USERS.USER_ROLE_ID IS 'Уникальный идентификатор роли';
COMMENT ON COLUMN EC_USERS.EMAIL IS 'Адрес электронной почты пользователя';
COMMENT ON COLUMN EC_USERS.EMAIL_CONFIRMED IS 'Признак подтвержденности адреса электронной почты пользователя';
COMMENT ON COLUMN EC_USERS.PASSWORD IS 'Пароль пользователя';
COMMENT ON COLUMN EC_USERS.FIRST_NAME IS 'Имя пользователя';
COMMENT ON COLUMN EC_USERS.SECOND_NAME IS 'Фамилия пользователя';
COMMENT ON COLUMN EC_USERS.MIDDLE_NAME IS 'Отчество пользователя(при наличии)';
COMMENT ON COLUMN EC_USERS.STATUS IS 'Статус пользователя';
-- Перечень ролей, имеющихся в системе
CREATE TABLE EC_USER_ROLES (
    USER_ROLE_ID NUMERIC PRIMARY KEY,
    ROLE_NAME VARCHAR(50) NOT NULL UNIQUE,
    ROLE_DESCRIPTION VARCHAR(50) NOT NULL
);
COMMENT ON TABLE EC_USER_ROLES IS 'Роли пользователей';
COMMENT ON COLUMN EC_USER_ROLES.USER_ROLE_ID IS 'Уникальный идентификатор роли пользователя';
COMMENT ON COLUMN EC_USER_ROLES.ROLE_NAME IS 'Название роли';
COMMENT ON COLUMN EC_USER_ROLES.ROLE_DESCRIPTION IS 'Описание роли';
-- Перечень прав доступа
CREATE TABLE EC_USER_PERMISSIONS (
    USER_PERMISSION_ID NUMERIC PRIMARY KEY,
    PERMISSION VARCHAR(50) NOT NULL UNIQUE ,
    DESCRIPTION VARCHAR(50) NOT NULL
);
COMMENT ON TABLE EC_USER_PERMISSIONS IS 'Права доступа пользователей';
COMMENT ON COLUMN EC_USER_PERMISSIONS.USER_PERMISSION_ID IS 'Уникальный идентификатор права доступа';
COMMENT ON COLUMN EC_USER_PERMISSIONS.PERMISSION IS 'Название права доступа';
COMMENT ON COLUMN EC_USER_PERMISSIONS.DESCRIPTION IS 'Описание права доступа';
-- Таблица, обеспечивающая связь многие ко многим между ролями и правами доступа
CREATE TABLE EC_ROLE_PERMISSION_REFERENCES (
    USER_ROLE_ID NUMERIC NOT NULL,
    USER_PERMISSION_ID NUMERIC NOT NULL,
    PRIMARY KEY (USER_ROLE_ID, USER_PERMISSION_ID)
);
COMMENT ON TABLE EC_ROLE_PERMISSION_REFERENCES IS 'Таблица связей между ролями и правами доступа';
COMMENT ON COLUMN EC_ROLE_PERMISSION_REFERENCES.USER_ROLE_ID IS 'Уникальный идентификатор роли';
COMMENT ON COLUMN EC_ROLE_PERMISSION_REFERENCES.USER_PERMISSION_ID IS 'Уникальный идентификатор права доступа';
-- Ограничения
ALTER TABLE EC_USERS
    ADD CONSTRAINT EC_USERS_2_USER_ROLES_FK
        FOREIGN KEY ( USER_ROLE_ID ) REFERENCES EC_USER_ROLES ( USER_ROLE_ID );
ALTER TABLE EC_ROLE_PERMISSION_REFERENCES
    ADD CONSTRAINT EC_ROLE_PERMISSION_REFERENCES_2_USER_ROLES_FK
        FOREIGN KEY ( USER_ROLE_ID ) REFERENCES EC_USER_ROLES ( USER_ROLE_ID );
ALTER TABLE EC_ROLE_PERMISSION_REFERENCES
    ADD CONSTRAINT EC_ROLE_PERMISSION_REFERENCES_2_USER_PERMISSIONS_FK
        FOREIGN KEY ( USER_ROLE_ID ) REFERENCES EC_USER_PERMISSIONS ( USER_PERMISSION_ID );
-- *ОБРАЗОВАТЕЛЬНЫЕ КУРСЫ*
-- Образовательные курсы
CREATE TABLE EC_EDUCATIONAL_COURSES (
    EDUCATIONAL_COURSE_ID SERIAL PRIMARY KEY,
    HEADER VARCHAR,
    DESCRIPTION VARCHAR,
    PRICE NUMERIC NOT NULL
);
-- Задачи
CREATE TABLE EC_EDUCATIONAL_TASKS (
    EDUCATIONAL_TASK_ID SERIAL PRIMARY KEY
);
-- Задачи
CREATE TABLE EC_USER_COMPLETE_TASKS (
    USER_COMPLETE_TASK_ID NUMERIC PRIMARY KEY,
    USER_ID NUMERIC NOT NULL,
    EDUCATIONAL_TASK_ID NUMERIC NOT NULL
);

-- Подписки пользователей на курсы
CREATE TABLE EC_USER_COURSE_SUBSCRIPTIONS (
    USER_COURSE_SUBSCRIPTION_ID NUMERIC PRIMARY KEY,
    USER_ID NUMERIC NOT NULL,
    EDUCATIONAL_COURSE_ID NUMERIC NOT NULL,
    EXPIRATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL
);

-- Всевозможные достижения, получаемые пользователем при
-- выполнении каких-нибудь заданий
CREATE TABLE EC_EDUCATIONAL_ACHIEVEMENTS (
    EDUCATIONAL_ACHIEVEMENT_ID SERIAL PRIMARY KEY,
    USER_ID NUMERIC NOT NULL,
    DESCRIPTION VARCHAR
);

-- *СТАТЬИ*
-- Статьи
CREATE TABLE EC_ARTICLES (
    ARTICLE_ID SERIAL PRIMARY KEY,
    USER_ID NUMERIC,
    HEADER VARCHAR,
    TAGS JSON,
    DATE TIMESTAMP,
    CONTENT JSON NOT NULL
);
-- !!! Добавить каскадное удаление статья -> комментарии
-- Комментарии к статьям
CREATE TABLE EC_ARTICLE_COMMENTS (
    ARTICLE_COMMENT_ID SERIAL PRIMARY KEY,
    ARTICLE_ID NUMERIC NOT NULL,
    USER_ID NUMERIC,
    PARENT_COMMENT_ID NUMERIC,
    CONTENT VARCHAR,
    DATE TIMESTAMP
);
-- Закладки, сделанные пользователем
CREATE TABLE EC_USER_BOOKMARKED_ARTICLES (
    USER_BOOKMARKED_ARTICLE_ID SERIAL PRIMARY KEY,
    USER_ID NUMERIC NOT NULL,
    ARTICLE_ID NUMERIC NOT NULL
)
